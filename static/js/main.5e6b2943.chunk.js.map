{"version":3,"sources":["components/ImageDetections/consts.ts","components/ImageDetections/ImageDetections.js","components/ImageDetections/DefinitionSearch.ts","components/ImageInput/ImageInput.js","components/TracauShoutout/TracauShoutout.jsx","components/InputText/InputText.jsx","components/Definition/Definition.jsx","components/DefinedWord/DefinedWord.jsx","components/SearchedText/SearchedText.jsx","components/TextInput/TextInput.js","App.js","reportWebVitals.js","index.js"],"names":["Tag","Aspect","Form","Case","Gender","Mood","Number","Person","Proper","Reciprocity","Tense","Voice","ImageDetections","detection","conjugations","partOfSpeech","className","aspect","form","mood","this","getPronoun","tense","voice","case","gender","number","person","definition","def","length","defnsList","tr","map","text","boundingPoly","vertices","description","translations","undefined","props","detections","p0","p1","p2","p3","x","Math","abs","console","log","rotation","detectImageRotation","i","yTop","min","y","xLeft","yBottom","max","xRight","topProp","leftProp","heightProp","widthProp","imageWidth","popover","Popover","id","Title","Content","renderPartOfSpeech","lemma","renderDefinition","adjustedImageHeight","window","innerHeight","adjustedImageWidth","imageHeight","adjustedTop","adjustedLeft","adjustedHeight","adjustedWidth","OverlayTrigger","placement","overlay","style","top","left","height","width","renderDetectionsOnImage","src","URL","createObjectURL","images","React","Component","searchDefinitions","a","lemmatize","contexts","lemmatizedDetections","context","tag","myCase","proper","Object","assign","filteredDetections","filter","val","defnPromises","axios","get","YANDEX_API_KEY","key","then","result","data","Promise","all","results","searchAgainPromises","DEEPL_API_KEY","defn","post","tokens","ImageInput","state","img_files","img_buffers","imagesInput","imagesParsed","textDetections","definedDetections","detectionsLoaded","changeImage","bind","setImageProps","event","setState","target","files","img_type","parseFiles","promises","Array","from","img_file","parseFile","strings","getOCR","resolve","reader","FileReader","addEventListener","image","Image","onload","readAsDataURL","img","textAnnotations","fullText","fullTextAnnotation","getDefinitions","type","onChange","TracauShoutout","href","alt","InputText","curText","shiftKey","submitSearch","onKeyPress","detectHotkeySubmit","value","icon","faSearch","onClick","_","Definition","startsWith","slice","DefinedWord","word","as","SearchedText","isLoaded","searchResults","words","split","compoundDefs","compoundPromises","searchCompoundWord","compoundDef","definitions","remainingSearchPromises","compoundPrev","compoundNext","tracauSearch","searchedText","trim","replace","tracau_API_key","tratu","tracauData","fields","fulltext","engDefStart","indexOf","defnTab","engDefEnd","defnsStartTag","defnsStart","defns","defnsEnd","entryList","forEach","parsedDef","seeOtherTag","seeOtherEnd","push","search","footer","returnToSearch","compoundWord","TextInput","searched","toggleSearch","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e6b2943.chunk.js","sourcesContent":["const punctuation: RegExp = /[.,/#!$%^&*;:{}=\\-_`~()]/g;\r\n\r\n/** Google Cloud Natural Language API enums */\r\nenum Tag {\r\n\tUNKNOWN = \"\",\r\n\tADJ = \"Adjective\",\r\n\tADP = \"Preposition\",\r\n\tADV = \"Adverb\",\r\n\tCONJ = \"Conjunction\",\r\n\tDET = \"Determiner\",\r\n\tNOUN = \"Noun\",\r\n\tNUM = \"Number\",\r\n\tPRON = \"Pronoun\",\r\n\tPRT = \"Particle\",\r\n\tPUNCT = \"Punctuation\",\r\n\tVERB = \"Verb\",\r\n\tX = \"\",\r\n\tAFFIX = \"Affix\",\r\n}\r\n\r\nenum Aspect {\r\n\tASPECT_UNKNOWN = \"\",\r\n\tPERFECTIVE = \"Perfective\",\r\n\tIMPERFECTIVE = \"Imperfective\",\r\n\tPROGRESSIVE = \"Progressive\",\r\n}\r\n\r\nenum Form {\r\n\tFORM_UNKNOWN = \"\",\r\n\tADNOMIAL = \"Adnomial\",\r\n\tAUXILIARY = \"Auxiliary\",\r\n\tCOMPLEMENTIZER = \"Complementizer\",\r\n\tFINAL_ENDING = \"Final ending\",\r\n\tGERUND = \"Gerund\",\r\n\tREALIS = \"Realis\",\r\n\tIRREALIS = \"Irrealis\",\r\n\tSHORT = \"Short form\",\r\n\tLONG = \"Long form\",\r\n\tORDER = \"Order form\",\r\n\tSPECIFIC = \"Specific form\"\r\n}\r\n\r\nenum Case {\r\n\tCASE_UNKNOWN = \"\",\r\n\tACCUSATIVE = \"Accusative\",\r\n\tADVERBIAL = \"Adverbial\",\r\n\tCOMPLEMENTIVE = \"Complementive\",\r\n\tDATIVE = \"Dative\",\r\n\tGENITIVE = \"Genitive\",\r\n\tINSTRUMENTAL = \"Instrumental\",\r\n\tLOCATIVE = \"Locative\",\r\n\tNOMINATIVE = \"Nominative\",\r\n\tOBLIQUE = \"Oblique\",\r\n\tPARTITIVE = \"Partitive\",\r\n\tPREPOSITIONAL = \"Prepositional\",\r\n\tREFLEXIVE_CASE = \"Reflexive\",\r\n\tRELATIVE_CASE = \"Relative\",\r\n\tVOCATIVE = \"Vocative\"\r\n}\r\n\r\nenum Gender {\r\n\tGENDER_UNKNOWN = \"\",\r\n\tFEMININE = \"Feminine\",\r\n\tMASCULINE = \"Masculine\",\r\n\tNEUTER = \"Neuter\"\r\n}\r\n\r\nenum Mood {\r\n\tMOOD_UNKNOWN = \"\",\r\n\tCONDITIONAL_MOOD = \"Conditional\",\r\n\tIMPERATIVE = \"Imperative\",\r\n\tINDICATIVE = \"Indicative\",\r\n\tINTERROGATIVE = \"Interrogative\",\r\n\tJUSSIVE = \"Jussive\",\r\n\tSUBJUNCTIVE = \"Subjunctive\",\r\n}\r\n\r\nenum Number {\r\n\tNUMBER_UNKNOWN = \"\",\r\n\tSINGULAR = \"Singular\",\r\n\tPLURAL = \"Plural\",\r\n\tDUAL = \"Dual\"\r\n}\r\n\r\nenum Person {\r\n\tPERSON_UNKNOWN = \"\",\r\n\tFIRST = \"First\",\r\n\tSECOND = \"Second\",\r\n\tTHIRD = \"Third\",\r\n\tREFLEXIVE_PERSON = \"Reflexive\",\r\n}\r\n\r\nenum Proper {\r\n\tPROPER_UNKNOWN = \"\",\r\n\tPROPER = \"Proper\",\r\n\tNOT_Proper = \"Not Proper\"\r\n}\r\n\r\nenum Reciprocity {\r\n\tRECIPROCITY_UNKNOWN = \"\",\r\n\tRECIPROCAL = \"Reciprocal\",\r\n\tNON_RECIPROCAL = \"Non-reciprocal\",\r\n}\r\n\r\nenum Tense {\r\n\tTENSE_UNKNOWN = \"\",\r\n\tCONDITIONAL_TENSE = \"Conditional\",\r\n\tFUTURE = \"Future\",\r\n\tPAST = \"Past\",\r\n\tPRESENT = \"Present\",\r\n\tIMPERFECT = \"Imperfect\",\r\n\tPLUPERFECT = \"Pluperfect\",\r\n}\r\n\r\nenum Voice {\r\n\tVOICE_UNKNOWN = \"\",\r\n\tACTIVE = \"Active\",\r\n\tCAUSATIVE = \"Causative\",\r\n\tPASSIVE = \"Passive\",\r\n}\r\n\r\nexport { punctuation, Tag, Form, Aspect, Case, Gender, Mood, Number, Person, Proper, Reciprocity, Tense, Voice }","import React from 'react';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport './ImageDetections.scss';\r\n\r\nclass ImageDetections extends React.Component {\r\n\trenderPartOfSpeech(detection) {\r\n\t\tconst conjugations = detection.partOfSpeech === \"Verb\"? (\r\n\t\t\t<div className=\"conjugations\">\r\n\t\t\t\t{detection.aspect !== \"\"? (<div key=\"aspect\">{detection.aspect}</div>) : null}\r\n\t\t\t\t{detection.form === \"Short form\"? (<div key=\"form\">Short Form</div>) : null}\r\n\t\t\t\t{detection.mood === \"Imperative\"? (<div key=\"mood\">Imperative</div>) : null}\r\n\t\t\t\t<div key=\"number/person\">{this.getPronoun(detection)}</div>\r\n\t\t\t\t{detection.tense !== \"\"? (<div key=\"tense\">{detection.tense}</div>) : null}\r\n\t\t\t\t{detection.voice !== \"\"? (<div key=\"voice\">{detection.voice}</div>) : null}\r\n\t\t\t</div>\r\n\t\t) : detection.partOfSpeech === \"Noun\"? (\r\n\t\t\t<div className=\"conjugations\">\r\n\t\t\t\t{detection.case !== \"\"? (<div key=\"case\">{detection.case}</div>) : null}\r\n\t\t\t\t{detection.gender !== \"\"? (<div key=\"gender\">{detection.gender}</div>) : null}\r\n\t\t\t\t{detection.number !== \"\"? (<div key=\"number\">{detection.number}</div>) : null}\r\n\t\t\t</div>\r\n\t\t) : detection.partOfSpeech === \"Adjective\"? (\r\n\t\t\t<div className=\"conjugations\">\r\n\t\t\t\t{detection.case !== \"\"? (<div key=\"case\">{detection.case}</div>) : null}\r\n\t\t\t\t{detection.gender !== \"\"? (<div key=\"gender\">{detection.gender}</div>) : null}\r\n\t\t\t\t{detection.number !== \"Plural\"? (<div key=\"number\">Plural</div>) : null}\r\n\t\t\t</div>\r\n\t\t) : null;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"context\">\r\n\t\t\t\t<div className=\"part-of-speech\">{detection.partOfSpeech}</div>\r\n\t\t\t\t{conjugations}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tgetPronoun(detection) {\r\n\t\tif (detection.person === \"First\") {\r\n\t\t\tif (detection.number === \"Singular\") return \"Я\"\r\n\t\t\treturn \"Мы\";\r\n\t\t} else if (detection.person === \"Second\") {\r\n\t\t\tif (detection.number === \"Singular\") return \"Ты\";\r\n\t\t\treturn \"Вы\";\r\n\t\t} else if (detection.person === \"Third\") {\r\n\t\t\tif (detection.number === \"Singular\") return \"Он/Она/Оно\";\r\n\t\t\treturn \"Они\";\r\n\t\t} else {\r\n\t\t\tif (detection.number === \"Singular\") return \"Reflexive (singular)\";\r\n\t\t\treturn \"Reflexive (plural)\";\r\n\t\t}\r\n\t}\r\n\r\n\trenderDefinition(detection) {\r\n\t\tif (detection.definition.def && detection.definition.def.length > 0) {\r\n\t\t\tconst defnsList = detection.definition.def[0].tr.map(tr => {\r\n\t\t\t\treturn (<li key={tr.text + detection.boundingPoly.vertices[0]}>{tr.text}</li>);\r\n\t\t\t});\r\n\t\t\treturn (<ol key={detection.description + detection.boundingPoly.vertices[0] + \"list\"}>{defnsList}</ol>);\r\n\r\n\t\t} else if (detection.definition.translations.length > 0) {\r\n\t\t\tif (detection.definition.translations[0] === '' || detection.definition.translations[0] === undefined) return (\"no definition found :(\")\r\n\t\t\tconst defnsList = detection.definition.translations.map(tr => {\r\n\t\t\t\treturn (<li key={tr.text + detection.boundingPoly.vertices[0]}>{tr.text}</li>);\r\n\t\t\t});\r\n\t\t\treturn (<ol key={detection.description + detection.boundingPoly.vertices[0] + \"list\"}>{defnsList}</ol>);\r\n\r\n\t\t} else return (\"no definition found :(\");\r\n\t}\r\n\r\n\tdetectImageRotation() {\r\n\t\t// pages -> blocks -> paragraphs -> words\r\n\t\tconst detection = this.props.detections[0];\r\n\t\tconst p0 = detection.boundingPoly.vertices[0];\r\n\t\tconst p1 = detection.boundingPoly.vertices[1];\r\n\t\tconst p2 = detection.boundingPoly.vertices[3];\r\n\t\tconst p3 = detection.boundingPoly.vertices[2];\r\n\r\n\t\tif (p1.x > p0.x && Math.abs(p1.x - p0.x) > Math.abs(p1.x - p3.x)) {\r\n\t\t\t// console.log(\"0 1\\n3 2\");\r\n\t\t\treturn \"right side up\";\r\n\t\t}\r\n\t\t\r\n\t\telse {\r\n\t\t\tconsole.log(\"the image was flipped at some point during detection and I simply don't know why :/\");\r\n\t\t\tif (p1.x < p0.x && Math.abs(p1.x - p0.x) > Math.abs(p0.x - p3.x)) {\r\n\t\t\t\tconsole.log(\"2 3\\n1 0\");\r\n\t\t\t\treturn \"upside-down\";\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif (p2.x > p1.x && Math.abs(p2.x - p1.x) > Math.abs(p1.x - p0.x)) {\r\n\t\t\t\t// console.log(\"1 2\\n0 3\");\r\n\t\t\t\treturn \"rotated left\";\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif (p1.x > p2.x && Math.abs(p1.x - p2.x) > Math.abs(p1.x - p0.x)) {\r\n\t\t\t\tconsole.log(\"3 0\\n2 1\");\r\n\t\t\t\treturn \"rotated right\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trenderDetectionsOnImage() {\r\n\t\tconst rotation = this.detectImageRotation();\r\n\r\n\t\tconst detections = this.props.detections.map((detection, i) => {\r\n\t\t\tconst p0 = detection.boundingPoly.vertices[0];\r\n            const p1 = detection.boundingPoly.vertices[1];\r\n            const p2 = detection.boundingPoly.vertices[3];\r\n            const p3 = detection.boundingPoly.vertices[2];\r\n\r\n\t\t\tconst yTop = Math.min(p0.y, p1.y, p2.y, p3.y);\r\n            const xLeft = Math.min(p0.x, p1.x, p2.x, p3.x);\r\n            const yBottom = Math.max(p0.y, p1.y, p2.y, p3.y);\r\n            const xRight = Math.max(p0.x, p1.x, p2.x, p3.x);\r\n\r\n            const height = yBottom - yTop;\r\n            const width = xRight - xLeft;\r\n\r\n            var topProp = yTop;\r\n            var leftProp = xLeft;\r\n            var heightProp = height;\r\n            var widthProp = width;\r\n\r\n\t\t\tif (rotation !== \"right side up\") {\r\n\t\t\t\tif (rotation === \"rotated left\") {\r\n\t\t\t\t\t// console.log(\"correcting left rotation\");\r\n\t\t\t\t\ttopProp = xLeft;\r\n                    leftProp = this.props.imageWidth - yBottom;\r\n                    heightProp = xRight - xLeft;\r\n                    widthProp = yBottom - yTop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rotation === \"rotated right\") {\r\n\t\t\t\t\tconsole.log(\"correcting right rotation\");\r\n\t\t\t\t\ttopProp = xLeft;\r\n                    leftProp = this.props.imageWidth - yBottom;\r\n                    heightProp = xRight - xLeft;\r\n                    widthProp = yBottom - yTop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rotation === \"upside-down\") {\r\n\t\t\t\t\tconsole.log(\"correcting upside-down rotation\");\r\n\t\t\t\t\ttopProp = xLeft;\r\n                    leftProp = this.props.imageWidth - yBottom;\r\n                    heightProp = xRight - xLeft;\r\n                    widthProp = yBottom - yTop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst popover = (\r\n\t\t\t\t<Popover className=\"dynamic-text-size\" id={detection.description} key={detection.description + topProp + \"-popover\"}>\r\n\t\t\t\t\t<Popover.Title className=\"large-dynamic-text-size\">{detection.description}</Popover.Title>\r\n\t\t\t\t\t<Popover.Content>\r\n\t\t\t\t\t\t{this.renderPartOfSpeech(detection)}\r\n\t\t\t\t\t\t{detection.lemma !== detection.description? (<div className=\"conjugation-of\"><div>Conjugation of</div><div className=\"lemma\">{detection.lemma}</div></div>) : null}\r\n\t\t\t\t\t\t<div className=\"lemma-definition\">{this.renderDefinition(detection)}</div>\r\n\t\t\t\t\t</Popover.Content>\r\n\t\t\t\t</Popover>\r\n\t\t\t);\r\n\r\n\t\t\tconst adjustedImageHeight = window.innerHeight;\r\n\t\t\tconst adjustedImageWidth = window.innerHeight * (this.props.imageWidth / this.props.imageHeight);\r\n\r\n\t\t\tconst adjustedTop = (topProp / this.props.imageHeight) * adjustedImageHeight;\r\n\t\t\tconst adjustedLeft = (leftProp / this.props.imageWidth) * adjustedImageWidth;\r\n\t\t\tconst adjustedHeight = (heightProp / this.props.imageHeight) * adjustedImageHeight;\r\n\t\t\tconst adjustedWidth = (widthProp / this.props.imageWidth) * adjustedImageWidth;\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div key={detection.description + topProp}>\r\n\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\tkey={detection.description}\r\n\t\t\t\t\t\tplacement='top'\r\n\t\t\t\t\t\toverlay={popover}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div key={adjustedTop + \"-text-overlay\"} className=\"text-overlay\" style={{ top: adjustedTop, left: adjustedLeft, height: adjustedHeight, width: adjustedWidth }}></div>\r\n\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn detections;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ImageDetections\">\r\n\t\t\t\t<div className=\"img-box\">\r\n\t\t\t\t\t{this.renderDetectionsOnImage()}\r\n\t\t\t\t\t<img key=\"original-image\" src={URL.createObjectURL(this.props.images[0])} height={window.innerHeight} top=\"0px\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ImageDetections;","import axios from \"axios\";\r\nimport YANDEX_API_KEY from '../../yandex_key.json';\r\nimport DEEPL_API_KEY from '../../deepL_api_key.json';\r\nimport { Aspect, Case, Form, Gender, Mood, Number, Person, Proper, Tag, Tense, Voice } from \"./consts\";\r\n\r\nconst lemmatizeUrl: string = 'https://us-east4-true-bit-315318.cloudfunctions.net/lemmatize';\r\n\r\nasync function searchDefinitions(detections: Array<any>) {\r\n    const contexts: Array<any> = await lemmatize(detections);\r\n    const lemmatizedDetections = contexts.map((context, i) => {\r\n        const partOfSpeech: keyof typeof Tag = context.partOfSpeech.tag;\r\n        const aspect: keyof typeof Aspect = context.partOfSpeech.aspect;\r\n        const myCase: keyof typeof Case = context.partOfSpeech.case;\r\n        const form: keyof typeof Form = context.partOfSpeech.form;\r\n        const gender: keyof typeof Gender = context.partOfSpeech.gender;\r\n        const mood: keyof typeof Mood = context.partOfSpeech.mood;\r\n        const number: keyof typeof Number = context.partOfSpeech.number;\r\n        const person: keyof typeof Person = context.partOfSpeech.person;\r\n        const proper: keyof typeof Proper = context.partOfSpeech.proper;\r\n        const tense: keyof typeof Tense = context.partOfSpeech.tense;\r\n        const voice: keyof typeof Voice = context.partOfSpeech.voice;\r\n\r\n        Object.assign(detections[i + 1], {\r\n            lemma: context.lemma,\r\n            partOfSpeech: Tag[partOfSpeech],\r\n            aspect: Aspect[aspect],\r\n            case: Case[myCase],\r\n            form: Form[form],\r\n            gender: Gender[gender],\r\n            mood: Mood[mood],\r\n            number: Number[number],\r\n            person: Person[person],\r\n            proper: Proper[proper],\r\n            tense: Tense[tense],\r\n            voice: Voice[voice]\r\n        });\r\n\r\n        return detections[i + 1];\r\n    });\r\n\r\n    // filter out punctuation detections\r\n    const filteredDetections = lemmatizedDetections.filter((val: any) => val.partOfSpeech !== \"Punctuation\");\r\n\r\n    const defnPromises = filteredDetections.map(detection => {\r\n        // console.log(\"detection:\", detection.description, \"lemma:\", detection.lemma, \"part of speech:\", detection.partOfSpeech);\r\n        return axios.get(`https://dictionary.yandex.net/api/v1/dicservice.json/lookup?key=${YANDEX_API_KEY.key}&lang=ru-en&text=${detection.lemma}`).then(result => {\r\n            Object.assign(detection, { definition: result.data });\r\n            return detection;\r\n        });\r\n    });\r\n\r\n    return Promise.all(defnPromises).then(results => {\r\n        const searchAgainPromises = results.map(detection => {\r\n            if (detection.def === undefined || detection.def.length === 0) {\r\n                return axios.get(`https://api-free.deepl.com/v2/translate?auth_key=${DEEPL_API_KEY.key}&text=${detection.lemma}&target_lang=EN`).then(defn => {\r\n                    Object.assign(detection, { definition: defn.data });\r\n                    return detection;\r\n                });\r\n            } else { return detection }\r\n        })\r\n\r\n        return Promise.all(searchAgainPromises).then(results => {\r\n            return results;\r\n        });\r\n    })\r\n}\r\n\r\nfunction lemmatize(detections: Array<any>) {\r\n    return axios.post(lemmatizeUrl, { text: detections[0].description }).then(result => {\r\n        return result.data.tokens;\r\n    });\r\n}\r\n\r\nexport { searchDefinitions }","import axios from 'axios';\r\nimport React from 'react';\r\nimport ImageDetections from '../ImageDetections/ImageDetections';\r\nimport { searchDefinitions } from '../ImageDetections/DefinitionSearch';\r\nimport './ImageInput.scss';\r\n\r\nclass ImageInput extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { img_files: null, img_buffers: null, imagesInput: false, imagesParsed: false, textDetections: null, definedDetections: null, detectionsLoaded: false, imageWidth: 0, imageHeight: 0 };\r\n        this.changeImage = this.changeImage.bind(this);\r\n        this.setImageProps = this.setImageProps.bind(this);\r\n    }\r\n\r\n    changeImage(event) {\r\n        this.setState({ img_files: event.target.files, img_type: '.jpg', imagesInput: true }, this.parseFiles);\r\n    }\r\n\r\n    async parseFiles() {\r\n        const promises = Array.from(this.state.img_files).map(img_file => {\r\n            return this.parseFile(img_file);\r\n        });\r\n\r\n        Promise.all(promises).then(strings => {\r\n            this.setState({ img_buffers: strings, imagesParsed: true }, this.getOCR);\r\n        });\r\n    }\r\n\r\n    setImageProps(width, height) {\r\n        this.setState({ imageWidth: width, imageHeight: height });\r\n    }\r\n\r\n    async parseFile(img_file) {\r\n        const setImageProps = this.setImageProps;\r\n\r\n        return new Promise(function (resolve) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", event => {\r\n                var image = new Image();\r\n                image.src = event.target.result;\r\n\r\n                image.onload = function() {\r\n                    setImageProps(this.width, this.height);\r\n                    // console.log(\"image\", this.width, \"x\", this.height);            \r\n                }\r\n\r\n                resolve(reader.result);\r\n            }, false);\r\n            reader.readAsDataURL(img_file);\r\n        });\r\n    }\r\n\r\n    async getOCR() {\r\n        return axios.post(`https://us-east4-true-bit-315318.cloudfunctions.net/documentTextDetection`, { img: this.state.img_buffers[0] }).then(result => {\r\n            this.setState({ textDetections: result.data.textAnnotations, fullText: result.data.fullTextAnnotation }, this.getDefinitions);\r\n        });\r\n    }\r\n\r\n    async getDefinitions() {\r\n        searchDefinitions(this.state.textDetections).then(results => {\r\n            this.setState({ definedDetections: results, detectionsLoaded: true });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return this.state.detectionsLoaded ? (\r\n            <div className=\"ImageInput\">\r\n                <ImageDetections detections={this.state.definedDetections} images={this.state.img_files} imageWidth={this.state.imageWidth} imageHeight={this.state.imageHeight} fullText={this.state.fullText} />\r\n            </div>\r\n        ) : this.state.imagesParsed ? (\r\n            <div className=\"ImageInput\">\r\n                Loading image text...\r\n                <div>\r\n                    <img src={this.state.img_buffers[0]} height={0.5 * window.innerHeight}></img>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div className=\"ImageInput\">\r\n               <div><input type='file' id='single' onChange={this.changeImage} /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageInput;","import React from 'react';\r\nimport './TracauShoutout.scss';\r\n\r\nclass TracauShoutout extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracau-banner\">\r\n\t\t\t\t<a href=\"https://tracau.vn\">\r\n\t\t\t\t\t<img src=\"https://tracau.vn/assets/img/api/banner_white.png\" alt=\"Powered by tra câu\"/>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TracauShoutout;","import React from 'react';\r\nimport TracauShoutout from '../TracauShoutout/TracauShoutout';\r\nimport './InputText.scss';\r\nimport '../../App.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass InputText extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {text: \"\"};\r\n    }\r\n\r\n    detectHotkeySubmit(event, curText) {\r\n        if (event.shiftKey && event.key === \"Enter\") {\r\n            this.props.submitSearch(curText);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"InputText\">\r\n                <div className=\"main-content\">\r\n                    <div>Enter text: </div>\r\n                    <div className=\"upper-flex\" onKeyPress = { event => this.detectHotkeySubmit(event, this.state.text) }>\r\n                        <textarea className=\"big-textbox\"\r\n                            value = {this.state.text}\r\n                            onChange = { event => this.setState({ text: event.target.value }) }></textarea>\r\n                        <FontAwesomeIcon icon={faSearch} onClick={_ => this.props.submitSearch(this.state.text)} />\r\n                    </div>\r\n                </div>\r\n\r\n                <TracauShoutout></TracauShoutout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\nimport '../../App.scss';\r\n\r\nclass Definition extends React.Component {\r\n    render() {\r\n        if (this.props.defnsList[0].startsWith(\"See \")) {\r\n            this.defnsList = this.props.defnsList.slice(1);\r\n        } else this.defnsList = this.props.defnsList;\r\n\r\n        return (\r\n            <div className=\"Definition\">\r\n                <ol>\r\n                    {this.defnsList.map((defn) => <li>{defn}</li>)}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Definition;","import React from 'react';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport '../../App.scss';\r\nimport Definition from '../Definition/Definition';\r\n\r\nclass DefinedWord extends React.Component {\r\n    render() {\r\n        const popover = (\r\n            <Popover id={this.props.word}>\r\n                <Popover.Title as=\"h3\">{this.props.word}</Popover.Title>\r\n                <Popover.Content>\r\n                    <Definition defnsList={this.props.defn} />\r\n                </Popover.Content>\r\n            </Popover>\r\n        );\r\n\r\n        return (\r\n            <div className=\"DefinedWord\">\r\n                <OverlayTrigger\r\n                    key={this.props.word}\r\n                    placement='top'\r\n                    overlay={popover}\r\n                >\r\n                    <div>{this.props.word}</div>\r\n                </OverlayTrigger>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DefinedWord;","import React from 'react';\r\nimport TracauShoutout from '../TracauShoutout/TracauShoutout';\r\nimport DefinedWord from '../DefinedWord/DefinedWord';\r\nimport '../../App.scss';\r\nimport './SearchedText.scss';\r\nimport axios from 'axios';\r\n\r\nclass SearchedText extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { isLoaded: false, searchResults: {} };\r\n    }\r\n\r\n    search(text) {\r\n        const words = text.split(/[ X\\n]/);\r\n        // console.log(\"searching for words\", words);\r\n\r\n        var compoundDefs = {};\r\n\r\n        const compoundPromises = words.map((word, i) => {\r\n            // check for compound words first\r\n            return this.searchCompoundWord(words, i).then((compoundDef) => {\r\n                if (compoundDef && compoundDef.length > 0) {\r\n                    if (!compoundDef[0].startsWith(\"See \")) {\r\n                        compoundDefs[word + \" \" + words[i + 1]] = compoundDef;\r\n                        return Promise.resolve();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        return Promise.all(compoundPromises).then(() => {\r\n            var definitions = Object.assign({}, compoundDefs);  // shallow copy\r\n            console.log(\"compound definitions:\", definitions);\r\n\r\n            const remainingSearchPromises = words.map((word, i) => {\r\n                const compoundPrev = words[i - 1] + \" \" + word;\r\n                const compoundNext = word + \" \" + words[i + 1];\r\n                if (!(compoundPrev in compoundDefs) && !(compoundNext in compoundDefs)) {\r\n                    // not part of a compound word\r\n                    return this.tracauSearch(word).then(def => {\r\n                        if (def && def.length > 0) {\r\n                            definitions[word] = def;\r\n                        }\r\n                        // if it could not be defined, we will simply gray out the word\r\n                        return Promise.resolve();\r\n                    });\r\n                } else return Promise.resolve();\r\n            });\r\n\r\n            return Promise.all(remainingSearchPromises).then(definitions);\r\n        });\r\n    }\r\n\r\n    searchCompoundWord(words, i) {\r\n        if (words.length > i + 1) {\r\n            return this.tracauSearch(words[i] + \" \" + words[i + 1]);\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    tracauSearch(searchedText) {\r\n        // strip special characters first\r\n        const punctuation = /[.,/#!$%^&*;:{}=\\-_`~()]/g;\r\n        const text = searchedText.trim().replace(punctuation, \"\");\r\n\r\n        return axios.get(\"https://api.tracau.vn/\" + tracau_API_key + \"/s/\" + text + \"/vi\").then(result => {\r\n            // console.log(`result for ${searchedText}:`, result);\r\n\r\n            if (result.data.tratu.length <= 0)\r\n                return false;\r\n\r\n            const tracauData = result.data.tratu[0].fields.fulltext;\r\n\r\n            const engDefStart = tracauData.indexOf('<article id=\"dict_vv\" data-tab-name=\"Việt - Anh\"');\r\n            var defnTab = tracauData.slice(engDefStart);\r\n            const engDefEnd = defnTab.indexOf('</article>');\r\n            defnTab = defnTab.slice(0, engDefEnd);\r\n\r\n            const defnsStartTag = '<table id=\"definition_T_ve_id\" border=\"0\">';\r\n            const defnsStart = defnTab.indexOf(defnsStartTag) + defnsStartTag.length;\r\n            var defns = defnTab.slice(defnsStart);\r\n            const defnsEnd = defns.indexOf('</table>');\r\n            defns = defns.slice(0, defnsEnd);\r\n\r\n            const aDefStartTag = '<td id=\"I_C\"><font color=\"#999\">■</font></td><td id=\"C_C\" colspan=\"2\">';\r\n            const entryList = defns.split(aDefStartTag);\r\n\r\n            var defnsList = [];\r\n            entryList.slice(1).forEach(def => {\r\n                var parsedDef = def.slice(0, def.indexOf('</td>'));\r\n\r\n                // check if tracau is trying to redirect user to a similar word\r\n                const seeOtherTag = 'Xem <font color=\"#1371BB\">';\r\n                const seeOtherTagLower = 'xem <font color=\"#1371BB\">';\r\n                const seeOtherEnd = parsedDef.indexOf('</font>')\r\n                if (parsedDef.startsWith(seeOtherTag) || parsedDef.startsWith(seeOtherTagLower)) {\r\n                    parsedDef = \"See \" + parsedDef.slice(seeOtherTag.length, seeOtherEnd);\r\n                }\r\n\r\n                defnsList.push(parsedDef);\r\n            });\r\n\r\n            return defnsList;\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.search(this.props.text).then((result) => {\r\n            console.log(\"search results\", result);\r\n            this.setState({ isLoaded: true, searchResults: result });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const footer = (\r\n            <div className=\"footer\">\r\n                <div className=\"submit-search\">\r\n                    <button onClick={this.props.returnToSearch}>Search again</button>\r\n                </div>\r\n                <TracauShoutout></TracauShoutout>\r\n            </div>\r\n        );\r\n\r\n        return this.props.text === \"\" ? (\r\n            <div className=\"SearchedText\">\r\n                <div className=\"text-display\">\r\n                    <div className=\"vertical-centered\">\r\n                        <div>Oops! Looks like no text was input. Would you like to search again?</div>\r\n                    </div>\r\n                </div>\r\n\r\n                {footer}\r\n            </div>\r\n        ) : this.state.isLoaded ? (\r\n            <div className=\"SearchedText\">\r\n                <div className=\"text-display\">\r\n                    <div className=\"vertical-centered\">\r\n                        <div className=\"words-and-definitions\">\r\n                            {\r\n                                this.props.text.split(/[ X\\n]/).map((word, i) => {\r\n                                    var lastWordDefined = -1;\r\n                                    // if this word was not part of a previous compound word...\r\n                                    if (lastWordDefined === i)\r\n                                        return;\r\n\r\n                                    // check for compound words first\r\n                                    const compoundWord = word + \" \" + this.props.text.split(/[ X\\n]/)[i + 1];\r\n                                    if (compoundWord in this.state.searchResults) {\r\n                                        const defn = this.state.searchResults[compoundWord];\r\n                                        return <DefinedWord word={compoundWord} defn={defn} key={i} />\r\n                                    }\r\n\r\n                                    // make sure a defition was found\r\n                                    if (word in this.state.searchResults) {\r\n                                        const defn = this.state.searchResults[word];\r\n                                        return <DefinedWord word={word} defn={defn} key={i} />\r\n                                    }\r\n\r\n                                    return (<div className=\"definition-not-found\" key={i}>{word}</div>)\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {footer}\r\n            </div>\r\n        ) : (\r\n            <div className=\"SearchedText\">\r\n                <div className=\"text-display\">\r\n                    <div className=\"vertical-centered\">loading...</div>\r\n                </div>\r\n\r\n                {footer}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst tracau_API_key = \"WBBcwnwQpV89\";\r\n\r\nexport default SearchedText;\r\n","\r\nimport React from 'react';\r\nimport InputText from '../InputText/InputText';\r\nimport SearchedText from '../SearchedText/SearchedText';\r\n\r\nclass TextInput extends React.Component {\r\n    constructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { searched: false, searchedText: \"\" };\r\n\t\tthis.toggleSearch = this.toggleSearch.bind(this);\r\n\t}\r\n\r\n\ttoggleSearch(text) {\r\n\t\tthis.setState(state => ({\r\n\t\t\tsearched: !state.searched,\r\n\t\t\tsearchedText: text\r\n\t\t}));\r\n\t}\r\n    \r\n    render() {\r\n        return this.state.searched ? (\r\n            <div className=\"TextInput\">\r\n                <SearchedText text={this.state.searchedText}\r\n                    returnToSearch={_ => this.toggleSearch(\"\")}>\r\n                </SearchedText>\r\n            </div>\r\n        ) : (\r\n            <div className=\"TextInput\">\r\n                <header className=\"App-header\">\r\n                    <InputText submitSearch={this.toggleSearch}></InputText>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.scss';\r\nimport ImageInput from './components/ImageInput/ImageInput';\r\nimport TextInput from './components/TextInput/TextInput';\r\n\r\nclass App extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/text\" component={TextInput} />\r\n\t\t\t\t\t\t<Route path=\"/img\" component={ImageInput} />\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={TextInput} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}